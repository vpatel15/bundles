{
  "name": "HTML_CodeSniffer",
  "version": "2.0.7",
  "description": "HTML_CodeSniffer is a client-side JavaScript that checks a HTML document or source code, and detects violations of a defined coding standard.",
  "main": "HTMLCS.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/squizlabs/HTML_CodeSniffer.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/squizlabs/HTML_CodeSniffer/issues"
  },
  "homepage": "http://squizlabs.github.io/HTML_CodeSniffer/",
  "dependencies": {
    "grunt": "^1.0.0",
    "load-grunt-tasks": "~3.5.x",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-uglify": "^2.0.0",
    "grunt-contrib-watch": "^1.0.0"
  },
  "gitHead": "c40bf690a6085827ceea78d1a61dda0ce446306a",
  "readme": "# HTML_CodeSniffer README\r\n\r\n## What is HTML_CodeSniffer?\r\n\r\nHTML_CodeSniffer is a JavaScript application that checks a HTML document\r\nor source code, and detects violations of a defined presentation or accessibility\r\nstandard.\r\n\r\n### Standards included\r\n\r\nBy default, HTML\\_CodeSniffer comes with standards that cover the three conformance\r\nlevels of the <abbr title=\"World Wide Web Consortium\">W3C</abbr> [Web Content Accessibility Guidelines (WCAG) 2.0](http://www.w3.org/TR/WCAG20),\r\nand the <abbr title=\"United States of America\">U.S.</abbr> [Section 508](http://section508.gov/index.cfm?fuseAction=stdsdoc) legislation.\r\nIt also provides tools to write your own standards, which can be useful in situations\r\nwhere you wish to enforce consistency across a web site.\r\n\r\n### Using HTML_CodeSniffer\r\n\r\nHTML\\_CodeSniffer can be called in multiple ways:\r\n* Called directly in JavaScript source, HTML_CodeSniffer will provide a list of known\r\n  and potential violations to the calling script.\r\n* It also comes with a pop-up auditor interface, accessible via a bookmarklet,\r\n  letting you browse through messages emitted from one of the defined standards. \r\n  Where possible, the auditor also points you to the HTML element causing the problem.\r\n* It can also be run on the command line with the assistance of a headless browser app.\r\n\r\n### Licence\r\n\r\nHTML_CodeSniffer is released under a BSD-style licence. For more information,\r\nplease see the file \"licence.txt\".\r\n\r\n## Using the source code\r\n\r\n### Building the auditor\r\n\r\nThe HTML\\_CodeSniffer auditor can be built using [node.js](https://nodejs.org/) and the Grunt\r\ntasker (http://gruntjs.com/). It has been tested with the latest version of node.js\r\n(at time of writing: version 6.0) and Grunt, but should also work with recent\r\nearlier versions. \r\n\r\n* Install node.js with your package manager of choice.\r\n* You may need to update the Node.js package manager (npm) itself: \r\n  <code>npm update -g npm</code>\r\n* Install the Grunt CLI helper if you haven't already done so:  \r\n  <code>npm install -g grunt-cli</code>\r\n* Get node.js to install the dependencies Grunt needs:  \r\n  <code>npm install</code>\r\n* Run Grunt to build the auditor:\r\n  <code>grunt build</code>\r\n  \r\nYou should see two new directories: <code>node_modules</code> (containing the node.js\r\ndependencies), and <code>build</code> (containing your auditor). You can then move\r\n(or symlink as appropriate) your <code>build</code> directory to a web-accessible\r\nlocation.\r\n\r\nThen grab or copy the JavaScript from the auditor bookmarklet from the [HTML_CodeSniffer site](https://squizlabs.github.io/HTML_CodeSniffer),\r\nreplace the directory at the start (//squizlabs.github.io/HTML_CodeSniffer/build) with your local URL, and save as a new bookmarklet.\r\n\r\n#### Debug build\r\n\r\nIf you are developing using HTML\\_CodeSniffer and require the code not minified for\r\ndebugging purposes, follow the above steps, but run <code>grunt build-debug</code>\r\n(instead of just build). This will combine the files as normal, but not minify them.\r\n  \r\n### Command-Line processing\r\n\r\n#### PhantomJS\r\n\r\nIf you are using command-line processing, you don't need to build the auditor as above.\r\nYou will, however, need [PhantomJS](http://www.phantomjs.org/) installed if you wish to\r\nuse the contributed command-line script. PhantomJS provides a headless Webkit-based\r\nbrowser to run the scripts in, so it should provide results that are similar to \r\nrecent (or slightly less than recent) versions of Safari.\r\n\r\nSee the <code>Contrib/PhantomJS/HTMLCS_Run.js</code> file for more information.\r\n\r\n#### Node & JSDom.\r\n\r\nHTML_CodeSniffer requires a dom to run, however, it is possible to run it entirely\r\nserver side without a headless browser using Node on arbitrary fragments of HTML using\r\nan environment wrapper like [JSDom](https://github.com/tmpvar/jsdom).\r\n\r\nAn example node script:\r\n```javascript\r\nvar jsdom  = require('jsdom');\r\nvar fs     = require('fs');\r\n\r\nvar vConsole = jsdom.createVirtualConsole();\r\n\r\n// Forward messages to the console.\r\nvConsole.on('log', function(message) {\r\n    console.log(message);\r\n})\r\n\r\njsdom.env({\r\n    html: '<img src=\"test.png\" />',\r\n    src: [fs.readFileSync('./build/HTMLCS.js')],\r\n    virtualConsole: vConsole,\r\n    done: function (err, window) {\r\n        window.HTMLCS_RUNNER.run('WCAG2AA');\r\n    }\r\n});\r\n```\r\n\r\n### Contributing and reporting issues\r\n\r\nTo report any issues with using HTML_CodeSniffer, please use the\r\n[HTML_CodeSniffer Issue Tracker](http://github.com/squizlabs/HTML_CodeSniffer/issues).\r\n\r\nContributions to the HTML_CodeSniffer code base are also welcome: please create a\r\nfork of the main repository, then submit your modified code through a\r\n[Pull Request](http://help.github.com/send-pull-requests/) for review. A Pull Request\r\nalso automatically creates an issue in the Issue Tracker, so if you have code to\r\ncontribute, you do not need to do both.\r\n\r\n## More Information\r\n\r\nMore information on HTML_CodeSniffer can be found on its GitHub site,\r\n[http://squizlabs.github.io/HTML_CodeSniffer/](http://squizlabs.github.io/HTML_CodeSniffer/). This site provides:\r\n\r\n- Information on the tests performed (and messages emitted) by HTML_CodeSniffer's standards, organised by conformance level and Success Criterion;\r\n- A source test area that allows you to try out HTML_CodeSniffer with your own HTML source code; and\r\n- A link to the HTML_CodeSniffer bookmarklet, letting you check other pages using the pop-up auditor interface.\r\n",
  "readmeFilename": "README.markdown",
  "_id": "HTML_CodeSniffer@2.0.7",
  "_shasum": "4726f2858ebcb0278799d0acd0a0a20d1a7f465a",
  "_from": "git+https://github.com/squizlabs/HTML_CodeSniffer.git#master",
  "_resolved": "git+https://github.com/squizlabs/HTML_CodeSniffer.git#c40bf690a6085827ceea78d1a61dda0ce446306a"
}
